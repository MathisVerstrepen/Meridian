[general]
ENV = "prod"
NAME = "meridian"
USERPASS = "admin:admin,admin2:admin2"

[ui]
NITRO_PORT = 3000

NUXT_PUBLIC_API_BASE_URL = "http://localhost:8000"
NUXT_API_INTERNAL_BASE_URL = "http://localhost:8000"

# Generate with `python -c "import os; print(os.urandom(32).hex())"`
NUXT_SESSION_PASSWORD = "8598f8c910766362aa0fddf38c4689b2f5adf70b9f08a076eac158c927549e50"

NUXT_PUBLIC_IS_OAUTH_DISABLED = "true"

NUXT_OAUTH_GITHUB_CLIENT_ID = ""
NUXT_OAUTH_GITHUB_CLIENT_SECRET = ""

NUXT_OAUTH_GOOGLE_CLIENT_ID = ""
NUXT_OAUTH_GOOGLE_CLIENT_SECRET = ""

[api]
API_PORT = 8000

PYTHONUNBUFFERED = 1
ALLOW_CORS_ORIGINS = "http://localhost:3000"

MASTER_OPEN_ROUTER_API_KEY = ""

DATABASE_ECHO = false

# Generate with `python -c "import os; print(os.urandom(32).hex())"`
BACKEND_SECRET = "9dcfcdec3862153b97500a98c2aaa0c10871e58ff0001eb6812581dfb40ae8a2"
JWT_SECRET_KEY = "2946f309eb810b968bb9aebda5afd5aaf13d2fe3e92b5f74a019852cb1e64bdf"

SEARXNG_URL = "http://localhost:8888"

GOOGLE_CSE_ID = "13b59231658654d8a"

[redis]
REDIS_HOST = "localhost"
REDIS_PORT = 6379
# Generate with `python -c "import os; print(os.urandom(32).hex())"`
REDIS_PASSWORD = "a8b3e4c1f5d6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"

[database]
POSTGRES_DB = "postgres"
POSTGRES_USER = "postgres"
POSTGRES_PASSWORD = "157a4f17820789efee0b862cb0a78687168aebb4f4a2672aab1f12ffbf60240a"
POSTGRES_HOST = "localhost"
POSTGRES_PORT = 5432

DATABASE_POOL_SIZE = 10
DATABASE_MAX_OVERFLOW = 20

# Postgres Performance Tuning
POSTGRES_SHARED_BUFFERS = "4GB" # Set to 25% of total system RAM.
POSTGRES_EFFECTIVE_CACHE_SIZE = "12GB" # Set to 75% of total system RAM.
POSTGRES_WORK_MEM = "32MB" # Memory for sorting, hashing, etc. PER OPERATION.
POSTGRES_MAINTENANCE_WORK_MEM = "1GB" # Memory for maintenance tasks like VACUUM and CREATE INDEX.
# Tells the planner that random disk I/O is not much more expensive than
# sequential I/O, which is true for SSDs. Encourages index usage.
POSTGRES_RANDOM_PAGE_COST = 1.1
POSTGRES_MAX_WORKER_PROCESSES = 8 # Match the number of CPU cores
POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER = 4 # Half the number of CPU cores is a good start
POSTGRES_MAX_PARALLEL_WORKERS = 8 # Match the number of CPU cores
POSTGRES_LOG_MIN_DURATION_STATEMENT = "250ms"  # Log queries that run longer than 250ms
POSTGRES_LOG_LOCK_WAITS = "on" # Log lock waits to diagnose contention issues.

[neo4j]
NEO4J_USER = "neo4j"
NEO4J_PASSWORD = "6f7113b4cd7474e3e0bce5b0b7bf3cd9976f61c6c4bbdcfe69bc8fa458310384"
NEO4J_HOST = "localhost"
NEO4J_BOLT_PORT = 7687
NEO4J_BOLT_ADDRESS = "0.0.0.0:7687"
NEO4J_HTTP_PORT = 7474
NEO4J_HTTP_ADDRESS = "0.0.0.0:7474"

[github]
GITHUB_CLIENT_ID = ""
GITHUB_REDIRECT_URI = "http://localhost:3000/settings?tab=github"
GITHUB_CLIENT_SECRET = ""

[sentry]
# (Optional) Enable Sentry for performance monitoring and error tracking.
# Can be self-hosted or cloud-based. If DSN is left empty, Sentry will be disabled.
# For self-hosting, the DSN should point to your Sentry instance (e.g., "http://<key>@localhost:9000/<project_id>").
SENTRY_DSN = ""